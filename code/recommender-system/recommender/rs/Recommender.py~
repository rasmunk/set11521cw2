import pandas as pd
from multiprocessing import Process
from ..util.Database import Database
from ..model.User import User
from ..model.Rating import Rating

class Recommender:

    def initialize(self):
        Database.initialize()

    ## Calculate recommendations for each user
    def start(self):
        self.collaborative_filtering()

    def collaborative_filtering(self):
	ratings = Database.session.query(Rating).all()
        users = Database.session.query(User).all()
	variables = User.__table__.columns
       
	#print(columns)
	df_users = pd.DataFrame(index=[u.userId for u in users], columns=[u.userId for u in users])
	#df_users = pd.DataFrame([[getattr(i, j) for j in variables] for i in users], columns=variables)
	#df_ratings        
	self.sim_pearsons(df_users)

    # https://books.google.dk/books?id=w84wDgAAQBAJ&pg=PA172&lpg=PA172&dq=sim+pearson+python&source=bl&ots=zR5gRVW8Sh&sig=swdFBvTh8oPaVl_3VfT-eFp_wxw&hl=da&sa=X&ved=0ahUKEwjVyp6TvKbTAhXIBsAKHSsyA_sQ6AEIRDAE#v=onepage&q=sim%20pearson%20python&f=false
    def sim_pearsons(self, df_users):
        print(df_users)
        #similarity = ['']
        #similarities = pd.DataFrame(index=len(df_users.iterrows()), columns=)
        #similarities
